/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611093806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610b98565b610045565b005b6004546000906001600160a01b031633146100b15760405162461bcd60e51b815260206004820152602160248201527f4d6f646966696572733a204d75737420626520636f6e7472616374206f776e656044820152603960f91b60648201526084015b60405180910390fd5b60025460009061ffff81169081908390600716156100e15750600381901c60009081526001840160205260409020545b60005b898110156101ce576101c183838d8d8581811061010357610103610c4a565b90506020028101906101159190610c60565b610123906020810190610c80565b8e8e8681811061013557610135610c4a565b90506020028101906101479190610c60565b610158906040810190602001610cb1565b8f8f8781811061016a5761016a610c4a565b905060200281019061017c9190610c60565b61018a906040810190610ccc565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061029792505050565b90935091506001016100e4565b508282146101ea5760028401805461ffff191661ffff84161790555b600782161561020c57600382901c600090815260018501602052604090208190555b7f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738a8a8a8a8a604051610243959493929190610da5565b60405180910390a161028b8888888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610a4692505050565b50505050505050505050565b6000808060008451116103005760405162461bcd60e51b815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201526a1858d95d081d1bc818dd5d60aa1b60648201526084016100a8565b600085600281111561031457610314610d16565b0361047a5761033b86604051806060016040528060248152602001610fea60249139610b12565b60005b845181101561047457600085828151811061035b5761035b610c4a565b6020908102919091018101516001600160e01b03198116600090815291859052604090912054909150606081901c156103f45760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100a8565b6001600160e01b031980831660008181526020879052604090206001600160601b031960608d901b168e17905560e060058e901b811692831c199c909c1690821c179a8190036104585760038c901c600090815260018601602052604081209b909b555b8b61046281610ee8565b9c50506001909301925061033e915050565b50610a3a565b600185600281111561048e5761048e610d16565b036106b3576104b58660405180606001604052806028815260200161103660289139610b12565b60005b84518110156104745760008582815181106104d5576104d5610c4a565b6020908102919091018101516001600160e01b03198116600090815291859052604090912054909150606081901c30810361056a5760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b60648201526084016100a8565b896001600160a01b0316816001600160a01b0316036105f15760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100a8565b6001600160a01b03811661066d5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e207468617420646f65736e2774206578697374000000000000000060648201526084016100a8565b506001600160e01b031990911660009081526020849052604090206bffffffffffffffffffffffff919091166001600160601b031960608a901b161790556001016104b8565b60028560028111156106c7576106c7610d16565b036109e2576001600160a01b038616156107425760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100a8565b600388901c6007891660005b86518110156109c25760008a900361078a578261076a81610f01565b60008181526001870160205260409020549b509350600792506107989050565b8161079481610f01565b9250505b6000806000808a85815181106107b0576107b0610c4a565b6020908102919091018101516001600160e01b031981166000908152918a9052604090912054909150606081901c6108505760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100a8565b30606082901c036108ba5760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016100a8565b600587901b8f901b94506001600160e01b031980861690831614610910576001600160e01b03198516600090815260208a90526040902080546001600160601b0319166bffffffffffffffffffffffff83161790555b6001600160e01b031991909116600090815260208990526040812055600381901c611fff16925060051b60e0169050858214610975576000828152600188016020526040902080546001600160e01b031980841c19909116908516831c179055610999565b80836001600160e01b031916901c816001600160e01b031960001b901c198e16179c505b846000036109b757600086815260018801602052604081208190559c505b50505060010161074e565b50806109cf836008610f18565b6109d99190610f35565b99505050610a3a565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100a8565b50959694955050505050565b6001600160a01b038216610a58575050565b610a7a8260405180606001604052806028815260200161100e60289139610b12565b600080836001600160a01b031683604051610a959190610f6c565b600060405180830381855af49150503d8060008114610ad0576040519150601f19603f3d011682016040523d82523d6000602084013e610ad5565b606091505b509150915081610b0c57805115610aef5780518082602001fd5b838360405163192105d760e01b81526004016100a8929190610faa565b50505050565b813b8181610b0c5760405162461bcd60e51b81526004016100a89190610fd6565b80356001600160a01b0381168114610b4a57600080fd5b919050565b60008083601f840112610b6157600080fd5b50813567ffffffffffffffff811115610b7957600080fd5b602083019150836020828501011115610b9157600080fd5b9250929050565b600080600080600060608688031215610bb057600080fd5b853567ffffffffffffffff80821115610bc857600080fd5b818801915088601f830112610bdc57600080fd5b813581811115610beb57600080fd5b8960208260051b8501011115610c0057600080fd5b60208301975080965050610c1660208901610b33565b94506040880135915080821115610c2c57600080fd5b50610c3988828901610b4f565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112610c7657600080fd5b9190910192915050565b600060208284031215610c9257600080fd5b610c9b82610b33565b9392505050565b803560038110610b4a57600080fd5b600060208284031215610cc357600080fd5b610c9b82610ca2565b6000808335601e19843603018112610ce357600080fd5b83018035915067ffffffffffffffff821115610cfe57600080fd5b6020019150600581901b3603821315610b9157600080fd5b634e487b7160e01b600052602160045260246000fd5b818352600060208085019450826000805b86811015610d705782356001600160e01b03198116808214610d5d578384fd5b8952509683019691830191600101610d3d565b50959695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060808252818101869052600090600560808085019089831b8601018a855b8b811015610e9f57878303607f190184528135368e9003605e19018112610dea57600080fd5b8d016001600160a01b03610dfd82610b33565b1684526020610e0d818301610ca2565b60038110610e2b57634e487b7160e01b600052602160045260246000fd5b8582015260408281013536849003601e19018112610e4857600080fd5b90920181810192903567ffffffffffffffff811115610e6657600080fd5b80891b3603841315610e7757600080fd5b8982880152610e898a88018286610d2c565b9783019796505050929092019150600101610dc4565b50506001600160a01b03891660208701528581036040870152610ec381888a610d7c565b9b9a5050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201610efa57610efa610ed2565b5060010190565b600081610f1057610f10610ed2565b506000190190565b8082028115828204841417610f2f57610f2f610ed2565b92915050565b80820180821115610f2f57610f2f610ed2565b60005b83811015610f63578181015183820152602001610f4b565b50506000910152565b60008251610c76818460208701610f48565b60008151808452610f96816020860160208601610f48565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090610fce90830184610f7e565b949350505050565b602081526000610c9b6020830184610f7e56fe4c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465a2646970667358221220d0ae67b9aa6ec29fc3f812eb9b8e799aa200b68b251c1d8a9232841ef9c129e664736f6c63430008140033";

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
