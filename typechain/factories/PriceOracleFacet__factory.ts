/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceOracleFacet,
  PriceOracleFacetInterface,
} from "../PriceOracleFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feed",
        type: "address",
      },
    ],
    name: "setAssetFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610164806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fd6fa52314610030575b600080fd5b61004361003e3660046100fb565b610045565b005b6004546000906001600160a01b031633146100b05760405162461bcd60e51b815260206004820152602160248201527f4d6f646966696572733a204d75737420626520636f6e7472616374206f776e656044820152603960f91b606482015260840160405180910390fd5b506001600160a01b03918216600090815260076020526040902080546001600160a01b03191691909216179055565b80356001600160a01b03811681146100f657600080fd5b919050565b6000806040838503121561010e57600080fd5b610117836100df565b9150610125602084016100df565b9050925092905056fea26469706673582212200382522c8ee8bb2273637d53cd3fe7e8f7e11b20c42ed187fa3e90928e8e80dd64736f6c63430008140033";

export class PriceOracleFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracleFacet> {
    return super.deploy(overrides || {}) as Promise<PriceOracleFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceOracleFacet {
    return super.attach(address) as PriceOracleFacet;
  }
  connect(signer: Signer): PriceOracleFacet__factory {
    return super.connect(signer) as PriceOracleFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleFacetInterface {
    return new utils.Interface(_abi) as PriceOracleFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracleFacet {
    return new Contract(address, _abi, signerOrProvider) as PriceOracleFacet;
  }
}
